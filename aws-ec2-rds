provider "aws" {

  region  = "ap-south-1"

}

resource "aws_vpc" "main" {

  cidr_block           = "10.0.0.0/16"

  enable_dns_support   = true

  enable_dns_hostnames = true

}

resource "aws_subnet" "public" {

  vpc_id     = aws_vpc.main.id

  cidr_block = "10.0.1.0/24"

  availability_zone = "ap-south-1a"

  tags = {

    Name = "Public Subnet"

  }

}

resource "aws_subnet" "private" {

  vpc_id     = aws_vpc.main.id

  cidr_block = "10.0.2.0/24"

  availability_zone = "ap-south-1a"

  tags = {

    Name = "Private Subnet"

  }

}

resource "aws_security_group" "ec2" {

  name        = "allow_ssh_https"

  description = "Allow SSH and HTTPS inbound traffic"

  vpc_id      = aws_vpc.main.id

  ingress {

    description = "SSH"

    from_port   = 22

    to_port     = 22

    protocol    = "tcp"

    cidr_blocks = ["0.0.0.0/0"]

  }

  ingress {

    description = "HTTPS"

    from_port   = 443

    to_port     = 443

    protocol    = "tcp"

    cidr_blocks = ["0.0.0.0/0"]

  }

  egress {

    from_port   = 0

    to_port     = 0

    protocol    = "-1"

    cidr_blocks = ["0.0.0.0/0"]

  }

}

resource "aws_instance" "ec2" {

  ami           = "ami-0b69ea66ff7391e80"

  instance_type = "t2.micro"

  key_name      = "my-key-pair"

  security_groups = [aws_security_group.ec2.id]

  subnet_id     = aws_subnet.public.id

  user_data = <<EOF

#!/bin/bash

yum update -y

yum install java-11-openjdk-devel -y

EOF

  tags = {

    Name = "EC2 Instance"

  }

}

resource "aws_db_instance" "rds" {

  allocated_storage    = 20

  storage_type         = "gp2"

  engine               = "mysql"

  engine_version       = "5.7"

  instance_class       = "db.t2.micro"

  name                 = "mydb"

  username             = "admin"

  password             = "password"

  vpc_security_group_ids = [aws_security_group.rds.id]

    subnet_group_name    = "my-subnet-group"

  publicly_accessible  = false

  tags = {

    Name = "RDS Instance"

  }

}

resource "aws_db_subnet_group" "rds" {

  name       = "my-subnet-group"

  subnet_ids = [aws_subnet.private.id]

}

resource "aws_security_group" "rds" {

  name        = "allow_rds_traffic"

  description = "Allow RDS traffic inbound and outbound"

  vpc_id      = aws_vpc.main.id

  ingress {

    from_port   = 3306

    to_port     = 3306

    protocol    = "tcp"

    security_groups = [aws_security_group.ec2.id]

  }

  egress {

    from_port   = 0

    to_port     = 0

    protocol    = "-1"

    cidr_blocks = ["0.0.0.0/0"]

  }

}

resource "aws_wafv2_ip_set" "waf" {

  name        = "my-ip-set"

  scope       = "REGIONAL"

  ip_address_version = "IPV4"

  addresses   = ["1.1.1.1/32"]

}

resource "aws_wafv2_web_acl" "waf" {

  name        = "my-web-acl"

  scope       = "REGIONAL"

  default_action {

    allow {}

  }

  visibility_config {

    cloudwatch_metrics_enabled = true

    metric_name                = "my-metric"

  }

  rules {

    name     = "my-rule"

    priority = 1

    action {

      block {}

    }

    statement {

      sqli_match_statement {

        field_to_match {

          uri_path {}

        }

      }

    }

  }

  rules {

    name     = "my-rule"

    priority = 2

    action {

      block {}

    }

    statement {

      rate_based_statement {

        limit        = 50

        aggregation_key = "IP"

        scope_down_statement {

          ip_set_reference_statement {

            arn = aws_wafv2_ip_set.waf.arn

          }

        }

      }

    }

  }

}

resource "aws_rds_db_instance" "rds" {

  identifier         = "mydb"

  db_instance_class  = "db.t2.micro"

  engine             = "mysql"

  username           = "admin"

  password           = "password"

  vpc_security_groups = [aws_security_group.rds.id]

  vpc_id             = aws_vpc.main.id

  subnet_group_name  = aws_db_subnet_group.rds.name

  publicly_accessible = false

  tags = {

    Name = "RDS Instance"

  }

}
